/* 
 * Copyright 2018 Amazon.com, Inc. and its affiliates. All Rights Reserved.
 *
 * SPDX-License-Identifier: LicenseRef-.amazon.com.-AmznSL-1.0
 *
 * Licensed under the Amazon Software License (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *   http://aws.amazon.com/asl/
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

import { UserInput, Slot } from '../driver/driverEntity';
import { HandlerInput } from 'ask-sdk';

/**
 * Accessor/Helper for UserInput used as an input for the Driver's story processing.
 */
export class UserInputHelper {
    constructor(private userInput: UserInput) { }

    /**
     * Gets the HandlerInput generated by the ASK SDK for the current request
     */
    getHandlerInput(): HandlerInput | undefined {
        return this.userInput.handlerInput;
    }
    
    getInputValue(): string | undefined {
        return this.userInput.value;
    }

    setInputValue(value: string): void {
        this.userInput.value = value;
    }

    getInputSlots(): Slot[] | undefined {
        return this.userInput.slots;
    }

    setInputSlots(slots: Slot[]): void {
        this.userInput.slots = slots;
    }

    getInputIntent(): string | undefined {
        return this.userInput.intent;
    }

    setInputIntent(intent: string): void {
        this.userInput.intent = intent;
    }

    addInputSlot(slotName: string, value: string) {
        if (!this.userInput.slots) {
            this.userInput.slots = [];
        }

        this.userInput.slots.push({
            name: slotName,
            value: value
        });
    }

    clearUserInput(): void {
        delete this.userInput.intent;
        delete this.userInput.slots;
        delete this.userInput.value;
    }

    getUserInput(): UserInput {
        return this.userInput;
    }
}